{
    "swagger": "2.0",
    "info": {
        "title": "EvalAI API",
        "description": "<br><h3>EvalAI API Documentation</h3>",
        "contact": {
            "email": "team@cloudcv.org"
        },
        "license": {
            "name": "BSD License"
        },
        "version": "v1"
    },
    "basePath": "/api",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Token Authentication": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "security": [
        {
            "Token Authentication": []
        }
    ],
    "paths": {
        "/accounts/user/disable": {
            "post": {
                "operationId": "accounts_user_disable_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "accounts"
                ]
            },
            "parameters": []
        },
        "/accounts/user/get_auth_token": {
            "get": {
                "operationId": "accounts_user_get_auth_token_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "accounts"
                ]
            },
            "parameters": []
        },
        "/analytics/challenge/{challenge_pk}/challenge_phase/{challenge_phase_pk}/analytics": {
            "get": {
                "operationId": "analytics_challenge_challenge_phase_analytics_list",
                "description": "Returns\n1. Total number of submissions in a challenge phase\n2. Number of teams which made submissions in a challenge phase\n3. Number of submissions with status a)Submitting, b)Submitted, c)Running, d)Failed, e)Cancelled, f)Finished status\n4. Number of flagged & public submissions in challenge phase",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/analytics/challenge/{challenge_pk}/challenge_phase/{challenge_phase_pk}/count": {
            "get": {
                "operationId": "analytics_challenge_challenge_phase_count_list",
                "description": "Returns number of submissions done by a participant team in a challenge phase",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/analytics/challenge/{challenge_pk}/challenge_phase/{challenge_phase_pk}/last_submission/{submission_by}": {
            "get": {
                "operationId": "analytics_challenge_challenge_phase_last_submission_read",
                "description": "Returns the last submission time for a particular challenge phase",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "submission_by",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/analytics/challenge/{challenge_pk}/challenge_phase/{challenge_phase_pk}/last_submission_datetime_analysis/": {
            "get": {
                "operationId": "analytics_challenge_challenge_phase_last_submission_datetime_analysis_list",
                "description": "API to fetch\n1. To get the last submission time in a challenge phase.\n2. To get the last submission time in a challenge.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/analytics/challenge/{challenge_pk}/participant/count": {
            "get": {
                "operationId": "analytics_challenge_participant_count_list",
                "description": "Returns the number of participants in a challenge",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/analytics/challenge/{challenge_pk}/submission/{duration}/count": {
            "get": {
                "operationId": "analytics_challenge_submission_count_list",
                "description": "Returns submission count for a challenge according to the duration\nValid values for duration are all, daily, weekly and monthly.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "duration",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/analytics/challenge/{challenge_pk}/team/count": {
            "get": {
                "operationId": "analytics_challenge_team_count_list",
                "description": "Returns the number of participant teams in a challenge",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "analytics"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/auth/login": {
            "post": {
                "operationId": "auth_login_create",
                "description": "Respond to POSTed username/password with token.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/login/": {
            "post": {
                "operationId": "auth_login_create",
                "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/logout/": {
            "get": {
                "operationId": "auth_logout_list",
                "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
                "description": "Accepts/Returns nothing.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "post": {
                "operationId": "auth_logout_create",
                "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
                "description": "Accepts/Returns nothing.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/password/change/": {
            "post": {
                "operationId": "auth_password_change_create",
                "summary": "Calls Django Auth SetPasswordForm save method.",
                "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/password/reset/": {
            "post": {
                "operationId": "auth_password_reset_create",
                "summary": "Calls Django Auth PasswordResetForm save method.",
                "description": "Accepts the following POST parameters: email\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordReset"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/password/reset/confirm/": {
            "post": {
                "operationId": "auth_password_reset_confirm_create",
                "summary": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.",
                "description": "Accepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/registration/": {
            "post": {
                "operationId": "auth_registration_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/registration/verify-email/": {
            "post": {
                "operationId": "auth_registration_verify-email_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VerifyEmail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VerifyEmail"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/auth/user/": {
            "get": {
                "operationId": "auth_user_read",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "put": {
                "operationId": "auth_user_update",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "patch": {
                "operationId": "auth_user_partial_update",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/challenges/challenge": {
            "get": {
                "operationId": "challenges_challenge_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": []
        },
        "/challenges/challenge/challenge_host_team/{challenge_host_team_pk}/zip_upload/": {
            "post": {
                "operationId": "challenges_challenge_challenge_host_team_zip_upload_create",
                "description": "Creates a challenge using a zip file.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_host_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/create/challenge_phase_split/step_5/": {
            "post": {
                "operationId": "challenges_challenge_create_challenge_phase_split_step_5_create",
                "description": "Create Challenge Phase Split",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": []
        },
        "/challenges/challenge/create/challenge_phase_split/{challenge_phase_split_pk}/": {
            "get": {
                "operationId": "challenges_challenge_create_challenge_phase_split_read",
                "description": "Returns or Updates challenge phase split",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "patch": {
                "operationId": "challenges_challenge_create_challenge_phase_split_partial_update",
                "description": "Returns or Updates challenge phase split",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_split_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/create/dataset_split/step_4/": {
            "post": {
                "operationId": "challenges_challenge_create_dataset_split_step_4_create",
                "description": "Creates a dataset split",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": []
        },
        "/challenges/challenge/create/dataset_split/{dataset_split_pk}/": {
            "get": {
                "operationId": "challenges_challenge_create_dataset_split_read",
                "description": "Returns or Updates a dataset split",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "patch": {
                "operationId": "challenges_challenge_create_dataset_split_partial_update",
                "description": "Returns or Updates a dataset split",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "dataset_split_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/create/leaderboard/step_2/": {
            "post": {
                "operationId": "challenges_challenge_create_leaderboard_step_2_create",
                "description": "Creates a leaderboard",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": []
        },
        "/challenges/challenge/create/leaderboard/{leaderboard_pk}/": {
            "get": {
                "operationId": "challenges_challenge_create_leaderboard_read",
                "description": "Returns or Updates a leaderboard",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "patch": {
                "operationId": "challenges_challenge_create_leaderboard_partial_update",
                "description": "Returns or Updates a leaderboard",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "leaderboard_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/{challenge_pk}/challenge_phase": {
            "get": {
                "operationId": "challenges_challenge_challenge_phase_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "post": {
                "operationId": "challenges_challenge_challenge_phase_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/{challenge_pk}/challenge_phase/{id}": {
            "get": {
                "operationId": "challenges_challenge_challenge_phase_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "put": {
                "operationId": "challenges_challenge_challenge_phase_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "patch": {
                "operationId": "challenges_challenge_challenge_phase_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "delete": {
                "operationId": "challenges_challenge_challenge_phase_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/{challenge_pk}/disable": {
            "post": {
                "operationId": "challenges_challenge_disable_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/{challenge_pk}/participant_team/{participant_team_pk}": {
            "post": {
                "operationId": "challenges_challenge_participant_team_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "participant_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/{challenge_time}": {
            "get": {
                "operationId": "challenges_challenge_read",
                "description": "Returns the list of all challenges",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_time",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge/{id}/": {
            "get": {
                "operationId": "challenges_challenge_read",
                "description": "Returns a particular challenge by id",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge_host_team/{challenge_host_team_pk}/challenge": {
            "get": {
                "operationId": "challenges_challenge_host_team_challenge_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "post": {
                "operationId": "challenges_challenge_host_team_challenge_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_host_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/challenge_host_team/{challenge_host_team_pk}/challenge/{challenge_pk}": {
            "get": {
                "operationId": "challenges_challenge_host_team_challenge_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "put": {
                "operationId": "challenges_challenge_host_team_challenge_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "patch": {
                "operationId": "challenges_challenge_host_team_challenge_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "delete": {
                "operationId": "challenges_challenge_host_team_challenge_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_host_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/featured/": {
            "get": {
                "operationId": "challenges_featured_list",
                "description": "Returns the list of featured challenges",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": []
        },
        "/challenges/{challenge_pk}/": {
            "get": {
                "operationId": "challenges_read",
                "description": "API endpoint for starring and unstarring\na challenge.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "post": {
                "operationId": "challenges_create",
                "description": "API endpoint for starring and unstarring\na challenge.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/{challenge_pk}/challenge_phase/{challenge_phase_pk}/submissions": {
            "get": {
                "operationId": "challenges_challenge_phase_submissions_list",
                "description": "Returns all the submissions for a particular challenge",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/{challenge_pk}/challenge_phase_split": {
            "get": {
                "operationId": "challenges_challenge_phase_split_list",
                "description": "Returns the list of Challenge Phase Splits for a particular challenge",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/challenges/{challenge_pk}/phase/{challenge_phase_pk}/download_all_submissions/{file_type}/": {
            "get": {
                "operationId": "challenges_phase_download_all_submissions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "challenges"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "file_type",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/hosts/challenge_host_team/": {
            "get": {
                "operationId": "hosts_challenge_host_team_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "post": {
                "operationId": "hosts_challenge_host_team_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": []
        },
        "/hosts/challenge_host_team/{challenge_host_team_pk}/challenge_host": {
            "get": {
                "operationId": "hosts_challenge_host_team_challenge_host_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "post": {
                "operationId": "hosts_challenge_host_team_challenge_host_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_host_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/hosts/challenge_host_team/{challenge_host_team_pk}/challenge_host/{id}": {
            "get": {
                "operationId": "hosts_challenge_host_team_challenge_host_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "put": {
                "operationId": "hosts_challenge_host_team_challenge_host_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "patch": {
                "operationId": "hosts_challenge_host_team_challenge_host_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "delete": {
                "operationId": "hosts_challenge_host_team_challenge_host_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_host_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/hosts/challenge_host_team/{id}": {
            "get": {
                "operationId": "hosts_challenge_host_team_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "put": {
                "operationId": "hosts_challenge_host_team_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "patch": {
                "operationId": "hosts_challenge_host_team_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "delete": {
                "operationId": "hosts_challenge_host_team_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/hosts/challenge_host_teams/{id}/invite": {
            "post": {
                "operationId": "hosts_challenge_host_teams_invite_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/hosts/create_challenge_host_team": {
            "post": {
                "operationId": "hosts_create_challenge_host_team_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": []
        },
        "/hosts/remove_self_from_challenge_host/{challenge_host_team_pk}": {
            "delete": {
                "operationId": "hosts_remove_self_from_challenge_host_delete",
                "description": "A user can remove himself from the challenge host team.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "hosts"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_host_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/challenge/{challenge_id}/challenge_phase/{challenge_phase_id}/submission/": {
            "get": {
                "operationId": "jobs_challenge_challenge_phase_submission_list",
                "description": "API Endpoint for making a submission to a challenge",
                "parameters": [
                    {
                        "name": "challenge_id",
                        "in": "path",
                        "description": "Id of challenge to which a submission is to be made",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "challenge_phase_id",
                        "in": "path",
                        "description": "Id of challenge phase to which a submission is to be made",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ]
            },
            "post": {
                "operationId": "jobs_challenge_challenge_phase_submission_create",
                "description": "API Endpoint for making a submission to a challenge",
                "parameters": [
                    {
                        "name": "challenge_id",
                        "in": "path",
                        "description": "Id of challenge to which a submission is to be made",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "challenge_phase_id",
                        "in": "path",
                        "description": "Id of challenge phase to which a submission is to be made",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_phase_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/challenge/{challenge_pk}/challenge_phase/{challenge_phase_pk}/submission/{submission_pk}": {
            "patch": {
                "operationId": "jobs_challenge_challenge_phase_submission_partial_update",
                "description": "API Endpoint for updating the submission meta data\nand changing submission visibility.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "submission_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/challenge_phase_split/{challenge_phase_split_id}/leaderboard/": {
            "get": {
                "operationId": "jobs_challenge_phase_split_leaderboard_list",
                "description": "Returns leaderboard for a corresponding Challenge Phase Split",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_split_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/submission/{submission_id}": {
            "get": {
                "operationId": "jobs_submission_read",
                "description": "API endpoint to fetch the details of a submission.\nOnly the submission owner or the challenge hosts are allowed.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "name": "submission_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/{challenge_pk}/phases/{challenge_phase_pk}/remaining_submissions": {
            "get": {
                "operationId": "jobs_phases_remaining_submissions_list",
                "description": "Returns the number of remaining submissions that a participant can\ndo per day and in total to a particular challenge phase of a\nchallenge.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_phase_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/participants/participant_team": {
            "get": {
                "operationId": "participants_participant_team_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "post": {
                "operationId": "participants_participant_team_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": []
        },
        "/participants/participant_team/{id}": {
            "get": {
                "operationId": "participants_participant_team_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "put": {
                "operationId": "participants_participant_team_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "patch": {
                "operationId": "participants_participant_team_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "delete": {
                "operationId": "participants_participant_team_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/participants/participant_team/{id}/invite": {
            "post": {
                "operationId": "participants_participant_team_invite_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/participants/participant_team/{participant_team_pk}/challenge": {
            "get": {
                "operationId": "participants_participant_team_challenge_list",
                "description": "Returns a challenge list in which the participant team has participated.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": [
                {
                    "name": "participant_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/participants/participant_team/{participant_team_pk}/participant/{participant_pk}": {
            "delete": {
                "operationId": "participants_participant_team_participant_delete",
                "description": "Deletes a participant from a Participant Team",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": [
                {
                    "name": "participant_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "participant_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/participants/participant_teams/challenges/{challenge_pk}/user": {
            "get": {
                "operationId": "participants_participant_teams_challenges_user_list",
                "description": "Returns list of teams and corresponding challenges for a participant",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": [
                {
                    "name": "challenge_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/participants/remove_self_from_participant_team/{participant_team_pk}": {
            "delete": {
                "operationId": "participants_remove_self_from_participant_team_delete",
                "description": "A user can remove himself from the participant team.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "participants"
                ]
            },
            "parameters": [
                {
                    "name": "participant_team_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/web/contact/": {
            "get": {
                "operationId": "web_contact_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "web"
                ]
            },
            "post": {
                "operationId": "web_contact_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "web"
                ]
            },
            "parameters": []
        },
        "/web/team/": {
            "get": {
                "operationId": "web_team_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "web"
                ]
            },
            "post": {
                "operationId": "web_team_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "web"
                ]
            },
            "parameters": []
        }
    },
    "definitions": {
        "Login": {
            "required": [
                "password"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string"
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "PasswordChange": {
            "required": [
                "old_password",
                "new_password1",
                "new_password2"
            ],
            "type": "object",
            "properties": {
                "old_password": {
                    "title": "Old password",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password1": {
                    "title": "New password1",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password2": {
                    "title": "New password2",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                }
            }
        },
        "PasswordReset": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            }
        },
        "PasswordResetConfirm": {
            "required": [
                "new_password1",
                "new_password2",
                "uid",
                "token"
            ],
            "type": "object",
            "properties": {
                "new_password1": {
                    "title": "New password1",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password2": {
                    "title": "New password2",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "minLength": 1
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Register": {
            "required": [
                "username",
                "email",
                "password1",
                "password2"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                },
                "password1": {
                    "title": "Password1",
                    "type": "string",
                    "minLength": 1
                },
                "password2": {
                    "title": "Password2",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "VerifyEmail": {
            "required": [
                "key"
            ],
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Profile": {
            "required": [
                "affiliation"
            ],
            "type": "object",
            "properties": {
                "pk": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "minLength": 1
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 30
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 30
                },
                "affiliation": {
                    "title": "Affiliation",
                    "type": "string",
                    "minLength": 1
                }
            }
        }
    }
}