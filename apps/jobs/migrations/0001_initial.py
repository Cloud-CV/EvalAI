# Generated by Django 2.2.20 on 2022-10-31 21:07

import base.utils
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('participants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('challenges', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('submitted', 'submitted'), ('running', 'running'), ('failed', 'failed'), ('cancelled', 'cancelled'), ('finished', 'finished'), ('submitting', 'submitting'), ('archived', 'archived'), ('partially_evaluated', 'partially_evaluated')], db_index=True, max_length=30)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('is_flagged', models.BooleanField(db_index=True, default=False)),
                ('submission_number', models.PositiveIntegerField(default=0)),
                ('download_count', models.IntegerField(default=0)),
                ('output', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('started_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('when_made_public', models.DateTimeField(blank=True, null=True)),
                ('input_file', models.FileField(upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('submission_input_file', models.FileField(blank=True, null=True, upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('input_file_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('stdout_file', models.FileField(blank=True, null=True, upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('stderr_file', models.FileField(blank=True, null=True, upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('code_upload_environment_log_file', models.FileField(blank=True, null=True, upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('submission_result_file', models.FileField(blank=True, null=True, upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('submission_metadata_file', models.FileField(blank=True, null=True, upload_to=base.utils.RandomFileName('submission_files/submission_{id}'))),
                ('execution_time_limit', models.PositiveIntegerField(default=300)),
                ('method_name', models.CharField(blank=True, db_index=True, default='', max_length=1000)),
                ('method_description', models.TextField(blank=True, default='')),
                ('publication_url', models.CharField(blank=True, default='', max_length=1000)),
                ('project_url', models.CharField(blank=True, default='', max_length=1000)),
                ('is_baseline', models.BooleanField(db_index=True, default=False)),
                ('job_name', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('ignore_submission', models.BooleanField(default=False)),
                ('submission_metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('is_verified_by_host', models.BooleanField(default=False)),
                ('challenge_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='challenges.ChallengePhase')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participant_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='participants.ParticipantTeam')),
            ],
            options={
                'db_table': 'submission',
            },
        ),
    ]
