version: '3'
services:
  django:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/evalai-staging-backend:${COMMIT_ID}
    env_file:
      - docker/prod/docker_staging.env
    build:
      context: ./
      dockerfile: docker/prod/django/Dockerfile
    ports:
      - '8000:8000'
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: django_staging
        awslogs-create-group: 'true'

  celery:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/evalai-staging-celery:${COMMIT_ID}
    env_file:
      - docker/prod/docker_staging.env
    build:
      context: ./
      dockerfile: docker/prod/celery/Dockerfile
    depends_on:
      - django
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: celery_staging
        awslogs-create-group: 'true'

  worker:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/evalai-staging-worker:${COMMIT_ID}
    build:
      context: ./
      dockerfile: docker/prod/worker/Dockerfile
    env_file:
      - docker/prod/docker_staging.env

  nodejs:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/evalai-staging-frontend:${COMMIT_ID}
    build:
      context: ./
      dockerfile: docker/prod/nodejs/Dockerfile
      args:
        NODE_ENV: staging
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /code/node_modules
      - /code/bower_components
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: nodejs_staging
        awslogs-create-group: 'true'

  remote-worker:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/evalai-staging-remote-worker:${COMMIT_ID}
    build:
      context: ./
      dockerfile: docker/prod/worker/Dockerfile
    command: ['python', '-m', 'scripts.workers.remote_submission_worker']
    env_file:
      - docker/prod/docker_remote_worker.env

  code-upload-worker:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/evalai-staging-code-upload-worker:${COMMIT_ID}
    env_file:
      - docker/prod/docker_code_upload_worker.env
    build:
      context: ./
      dockerfile: docker/prod/code-upload-worker/Dockerfile

  prometheus:
    image: prom/prometheus:latest
    user: "1000"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/prometheus_db:/var/lib/prometheus
      - ./monitoring/prometheus/prometheus_db:/prometheus
      - ./monitoring/prometheus/prometheus_db:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    ports:
      - '9090:9090'
  
  grafana:
    image: grafana/grafana:latest
    user: "1000"
    env_file:
      - docker/prod/docker_staging.env
    volumes:
      - ./monitoring/grafana/grafana_db:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
