version: "3"
services:
  db:
    image: postgres:10.4
    ports:
      - "5432:5432"
    volumes:
      - ./backups:/backups

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./backups:/backups
    links:
      - db:db
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=81

  sqs:
    image: pakohan/elasticmq
    hostname: sqs
    ports:
      - 9324:9324

  django:
    hostname: django
    env_file:
      - docker/dev/docker.env
    image: yashdusing/evalai_django:latest
    ports:
      - "8000:8000"
    depends_on:
      - db
      - sqs
    volumes:
      - .:/code

  worker:
    image: yashdusing/evalai_worker:latest
    env_file:
      - docker/dev/docker.env
    depends_on:
      - django
    volumes:
      - .:/code

  nodejs:
    build:
      context: ./
      dockerfile: docker/vm/nodejs/Dockerfile
      args:
        NODE_ENV: vm
        DOMAIN_NAME: ${DOMAIN_NAME}
        TYPE: https
        NGINX_FILE_NAME: nginx_vm
    depends_on:
      - django
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /code/node_modules
      - /code/bower_components
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    environment: 
      NODE_ENV: vm
      DOMAIN_NAME: ${DOMAIN_NAME}
      TYPE: https
      NGINX_FILE_NAME: nginx_vm
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
